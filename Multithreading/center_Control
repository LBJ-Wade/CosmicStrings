#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri Feb 23 00:01:54 2018

@author: eloisechakour
"""
import numpy as np
import time

start = [[1, 2, 3], [1, 2, 3], [1, 2, 3]]
end = [[2, 3, 4], [2, 3, 4], [2, 3, 4]]

completeArray = np.zeros((10, 10, 10), dtype = float)
for i in range(10):
    for j in range(10):
        for k in range(10):
            completeArray[i, j, k] = i+j+k


def center(start, end, completeArray, size):

    myCube = []
    
    for i in range(size):
        for j in range(size):
            for k in range(size):
                #time.sleep(0.5)
                myCube.append([i, j, k])
                print i
                
    if (size/2)%2 == 0:
        half = size/2
    else: 
        half = size/2 - 0.5
    
        

    
    for i in range(len(myCube)):
        myCube[i][0] = myCube[i][0] - half
        myCube[i][1] = myCube[i][1] - half
        myCube[i][2] = myCube[i][2] - half
    
    for i in range (10):
        for j in range (10):
            completeArray[i, j, 0] = completeArray[i, j, 0] - half
            completeArray[i, j, 1] = completeArray[i, j, 1] - half
            completeArray[i, j, 2] = completeArray[i, j, 2] - half
    
    for i in range(len(start)):
        start[i][0] = start[i][0] - half 
        start[i][1] = start[i][1] - half 
        start[i][2] = start[i][2] - half 
        end[i][0] = end[i][0] - half
        end[i][1] = end[i][1] - half
        end[i][2] = end[i][2] - half
    

    return myCube, start, end, completeArray

startTime= time.time()
cube, start1, end1, completeArray1 = center(start, end, completeArray, 10)
endTime = time.time()

print(endTime-startTime)
