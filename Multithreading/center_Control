#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri Feb 23 00:01:54 2018

@author: eloisechakour
"""
import numpy as np
import time

start = [[1, 2, 3], [1, 2, 3], [1, 2, 3]]
end = [[2, 3, 4], [2, 3, 4], [2, 3, 4]]
size = 200
# 
# completeArray = np.zeros((size, size, size), dtype=float)
# for i in range(size):
#     for j in range(size):
#         for k in range(size):
#             completeArray[i, j, k] = i+j+k
#             # print(i)
#
# np.save("completeArray", completeArray)
completeArray = np.load("completeArray.npy")

def center(start, end, completeArray, size):

    start = np.asarray(start)
    end = np.asarray(end)

    myCube = np.zeros(shape=(size**3, 3))
    counter = 0
    for i in range(size-1):
        for j in range(size-1):
            for k in range(size-1):
                myCube[counter] = [i, j, k]
                counter += 1
                # print(counter)

    half = np.int(size/2)
    myCube -= half
    completeArray -= half
    start -= half
    end -= half

    return myCube, start, end, completeArray

startTime = time.time()
cube, start1, end1, completeArray1 = center(start, end, completeArray, size)
endTime = time.time()

print(endTime-startTime)
# print(completeArray1)
